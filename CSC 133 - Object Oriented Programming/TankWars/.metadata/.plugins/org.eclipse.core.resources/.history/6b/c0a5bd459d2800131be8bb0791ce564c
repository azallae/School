package a1;

import java.util.Scanner;

public class Game {
	private GameWorld gw;
		
	public Game() {
		gw = new GameWorld();
		play();
	}
	
	private void play() {
		//accept and execute user commands that operate on the GameWorld
		Scanner in = new Scanner(System.in);
		String cmd;
		
		do {
			System.out.print("Choose an action (? for help): ");
			cmd = in.nextLine();
		} while (getCommand(cmd));
		
		System.exit(0);
	}
	
	private boolean getCommand(String cmd) {
		if (cmd.equalsIgnoreCase("r")) {
			rightTurn();
		}
		else if (cmd.equalsIgnoreCase("l")) {
			leftTurn();
		}
		else if (cmd.equalsIgnoreCase("i")) {
			incSpeed();
		}
		else if (cmd.equalsIgnoreCase("k")) {
			decSpeed();
		}
		else if (cmd.equalsIgnoreCase("f")) {
			firePlayerMissile();
		}
		else if (cmd.equalsIgnoreCase("e")) {
			fireEnemyMissile();
		}
		else if (cmd.equalsIgnoreCase("1")) {
			hitTank();
		}
		else if (cmd.equalsIgnoreCase("2")) {
			missileCollision();
		}
		else if (cmd.equalsIgnoreCase("3")) {
			collide();
		}
		else if (cmd.equalsIgnoreCase("t")) {
			elaspeTime();
		}
		else if (cmd.equalsIgnoreCase("d")) {
			displayStates();
		}
		else if (cmd.equalsIgnoreCase("m")) {
			showMap();
		}
		else if (cmd.equalsIgnoreCase("?")) {
			help();
		}
		else if (cmd.equalsIgnoreCase("q")) {
			return validateQuit();
		}
		else {
			System.out.println("Command not recognized.");
		}
		return true;
	}

	private void rightTurn() {
		gw.getPlayerTank().rightTurn();		
	}

	private void leftTurn() {
		gw.getPlayerTank().leftTurn();
	}

	private void incSpeed() {
		gw.getPlayerTank().incSpeed(1);		
	}

	private void decSpeed() {
		gw.getPlayerTank().decSpeed(1);	
	}

	private void firePlayerMissile() {		
		if (gw.getPlayerTank().fireMissile()) {
			gw.makeMissile(gw.getPlayerTank());
		}
		else {
			System.out.println("Your tank is out of missiles!");
		}
	}

	private void fireEnemyMissile() {
		int rndTank = 0;
		while (rndTank == 0) {
			rndTank = gw.getRandomTank();
		}
		
		if (gw.getTankList().get(rndTank).fireMissile()) {
			gw.makeMissile(gw.getTankList().get(rndTank));
		}
		else {
			System.out.println("The selected tank is out of missiles!");
		}
	}

	private void hitTank() {
		if (gw.getMissileList().isEmpty()) {
			System.out.println("There are no current missiles. Command ignored.");
		}
		else {
			gw.removeObject(gw.getRandomMissile());
			
			int rndTank = gw.getRandomTank();			
			if (gw.getTankList().get(rndTank).hit()) {
				if (rndTank == 0) {
					System.out.println("Your tank has been destroyed by a missle!");
					gw.playerKIA();
				}
				else {
					System.out.println("Tank number " + rndTank + "has been destroyed by a missle! A new enemy tank has spawned.");
					gw.respawnEnemy(gw.getTankList().get(rndTank));
				}
			}
			else {
				int armorStr = gw.getTankList().get(rndTank).getArmorStrength();				
				System.out.println("Tank number " + rndTank + "has been hit by a missle! It's armor strength is now " + armorStr);
			}
		}
	}

	private void missileCollision() {
		// TODO Auto-generated method stub
		
	}

	private void collide() {
		// TODO Auto-generated method stub
		
	}

	private void elaspeTime() {
		// TODO Auto-generated method stub
		
	}

	private void displayStates() {
		// TODO Auto-generated method stub
		
	}

	private void showMap() {
		// TODO Auto-generated method stub
		
	}

	private void help() {
		// TODO Auto-generated method stub
		
	}

	private boolean validateQuit() {
		// TODO Auto-generated method stub
		return false;
	}
}
